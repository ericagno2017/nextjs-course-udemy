{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}; // export async function getServerSideProps(context){\n//     const req = context.req;\n//     const resp = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n//es solo para los componentes en PAGES, no sirve en ningún otro componente.\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db(\"meetups\");\n  const meetupCollection = db.collection(\"meetups\"); //     // perform actions on the collection object\n\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/index.js"],"names":["MongoClient","MeetupList","Head","Fragment","HomePage","props","meetups","getStaticProps","uri","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AAEA,QAAMC,GAAG,GAAG,6FAAZ;AACA,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoBF,GAApB,CAArB;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,SAAV,CAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CANmC,CAOnC;;AACA,QAAMP,OAAO,GAAG,MAAMM,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAO;AACHX,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACW,GAAR,CAAYC,MAAM,KAAK;AAC5BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADc;AAE5BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFY;AAG5BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHc;AAI5BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAerB,QAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\nimport {Fragment} from \"react\";\n\nconst HomePage = (props) => {\n    return (\n        <Fragment>\n            <Head></Head>\n            <MeetupList meetups={props.meetups}/>\n        </Fragment>\n    )\n}\n\n\n// export async function getServerSideProps(context){\n//     const req = context.req;\n//     const resp = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n\n\n//es solo para los componentes en PAGES, no sirve en ningún otro componente.\nexport async function getStaticProps() {\n    //fetch data from an API\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    //     // perform actions on the collection object\n    const meetups = await meetupCollection.find().toArray();\n\n    client.close();\n\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString()\n            }))\n        },\n        revalidate: 10\n    };\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}