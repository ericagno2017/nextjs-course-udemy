{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\"; // const DUMMY_MEETUPS = [\n//     {\n//         id: \"m1\",\n//         title: \"A First MeetUp\",\n//         image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//         address: \"Some address 5, 12345 Some City\",\n//         description: \"First Meet\"\n//     },\n//     {\n//         id: \"m2\",\n//         title: \"Second MeetUp\",\n//         image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//         address: \"Some address 5, 12345 Some City\",\n//         description: \"Second Meet\"\n//     }\n// ]\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}; // export async function getServerSideProps(context){\n//     const req = context.req;\n//     const resp = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n//es solo para los componentes en PAGES, no sirve en ningún otro componente.\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  let meetups = [];\n  const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n  const client = new MongoClient(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  client.connect(async err => {\n    const meetupCollection = client.db(\"meetups\").collection(\"meetups\"); // perform actions on the collection object\n\n    meetups = await meetupCollection.find().toArray();\n    await client.close();\n  });\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        //description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","uri","client","useNewUrlParser","useUnifiedTopology","connect","err","meetupCollection","db","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACQ,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADR;AAGH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,OAAO,eAAeC,cAAf,GAA+B;AAClC;AACA,MAAID,OAAO,GAAG,EAAd;AACA,QAAME,GAAG,GAAG,6FAAZ;AAEA,QAAMC,MAAM,GAAG,IAAIP,WAAJ,CAAgBM,GAAhB,EAAqB;AAAEE,IAAAA,eAAe,EAAE,IAAnB;AAAyBC,IAAAA,kBAAkB,EAAE;AAA7C,GAArB,CAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAe,MAAMC,GAAN,IAAa;AACxB,UAAMC,gBAAgB,GAAGL,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqBC,UAArB,CAAgC,SAAhC,CAAzB,CADwB,CAExB;;AACAV,IAAAA,OAAO,GAAG,MAAMQ,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAAhB;AACA,UAAMT,MAAM,CAACU,KAAP,EAAN;AACH,GALD;AAOA,SAAO;AACHd,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACc,GAAR,CAAYC,MAAM,KAAK;AAC5BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADc;AAE5BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFY;AAG5BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHc;AAI5B;AACAC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AALwB,OAAL,CAAlB;AADN,KADJ;AAUHC,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AAED,eAAexB,QAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n// const DUMMY_MEETUPS = [\n//     {\n//         id: \"m1\",\n//         title: \"A First MeetUp\",\n//         image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//         address: \"Some address 5, 12345 Some City\",\n//         description: \"First Meet\"\n//     },\n//     {\n//         id: \"m2\",\n//         title: \"Second MeetUp\",\n//         image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//         address: \"Some address 5, 12345 Some City\",\n//         description: \"Second Meet\"\n//     }\n// ]\nconst HomePage = (props) => {\n    return (\n            <MeetupList meetups={props.meetups}/>\n    )\n}\n\n// export async function getServerSideProps(context){\n//     const req = context.req;\n//     const resp = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n\n\n//es solo para los componentes en PAGES, no sirve en ningún otro componente.\nexport async function getStaticProps(){\n    //fetch data from an API\n    let meetups = [];\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n\n    const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true});\n    client.connect(async err => {\n        const meetupCollection = client.db(\"meetups\").collection(\"meetups\");\n        // perform actions on the collection object\n        meetups = await meetupCollection.find().toArray();\n        await client.close();\n    });\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                //description: meetup.description,\n                id: meetup._id.toString()\n            }))\n        },\n        revalidate: 10\n    };\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}