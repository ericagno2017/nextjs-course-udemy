{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First MeetUp\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"First Meet\"\n}, {\n  id: \"m2\",\n  title: \"Second MeetUp\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: \"Some address 5, 12345 Some City\",\n  description: \"Second Meet\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}; // export async function getServerSideProps(context){\n//     const req = context.req;\n//     const resp = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n//es solo para los componentes en PAGES, no sirve en ningún otro componente.\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  // var meetups = [];\n  // const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n  //\n  // const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true});\n  // client.connect(async err => {\n  //     const meetupCollection = client.db(\"meetups\").collection(\"meetups\");\n  //     // perform actions on the collection object\n  //     meetups = await meetupCollection.find().toArray();\n  //\n  // });\n  //\n  // await client.close();\n  const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupCollection = client.db(\"meetups\").collection(\"meetups\"); //     // perform actions on the collection object\n\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","uri","client","connect","db","meetupCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,SAA1B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,iCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,eAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,iCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB;;AAgBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,GAAG,GAAG,6FAAZ;AACA,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBF,GAApB,CAArB;AACA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGH,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqBE,UAArB,CAAgC,SAAhC,CAAzB,CAlBmC,CAmBnC;;AACA,QAAMP,OAAO,GAAG,MAAMM,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAO;AACHX,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACW,GAAR,CAAYC,MAAM,KAAK;AAC5BlB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KADc;AAE5BE,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAFY;AAG5BD,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KAHc;AAI5BF,QAAAA,EAAE,EAAEmB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAejB,QAAf","sourcesContent":["import {MongoClient} from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n    {\n        id: \"m1\",\n        title: \"A First MeetUp\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        address: \"Some address 5, 12345 Some City\",\n        description: \"First Meet\"\n    },\n    {\n        id: \"m2\",\n        title: \"Second MeetUp\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        address: \"Some address 5, 12345 Some City\",\n        description: \"Second Meet\"\n    }\n]\nconst HomePage = (props) => {\n    return (\n        <MeetupList meetups={props.meetups}/>\n    )\n}\n\n// export async function getServerSideProps(context){\n//     const req = context.req;\n//     const resp = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }\n\n\n//es solo para los componentes en PAGES, no sirve en ningún otro componente.\nexport async function getStaticProps() {\n    //fetch data from an API\n    // var meetups = [];\n    // const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    //\n    // const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true});\n    // client.connect(async err => {\n    //     const meetupCollection = client.db(\"meetups\").collection(\"meetups\");\n    //     // perform actions on the collection object\n    //     meetups = await meetupCollection.find().toArray();\n    //\n    // });\n    //\n    // await client.close();\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db();\n    const meetupCollection = client.db(\"meetups\").collection(\"meetups\");\n    //     // perform actions on the collection object\n    const meetups = await meetupCollection.find().toArray();\n\n    client.close();\n\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString()\n            }))\n        },\n        revalidate: 10\n    };\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}