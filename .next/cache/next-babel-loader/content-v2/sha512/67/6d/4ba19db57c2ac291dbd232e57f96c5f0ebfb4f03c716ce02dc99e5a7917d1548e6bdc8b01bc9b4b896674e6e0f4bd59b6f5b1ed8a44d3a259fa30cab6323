{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetUpDetails = function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetUpData.image,\n    title: props.meetUpData.title,\n    address: props.meetUpData.address,\n    description: props.meetUpData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetUpDetails","props","meetUpData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CATD;;KAAMN,a;;AA0DN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient, ObjectId} from \"mongodb\";\n\nconst MeetUpDetails = (props) => {\n    return (\n        <MeetupDetail\n            image={props.meetUpData.image}\n            title={props.meetUpData.title}\n            address={props.meetUpData.address}\n            description={props.meetUpData.description}\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    // perform actions on the collection object\n    const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params:\n                {\n                    meetupId: meetup._id.toString()\n                }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    const meetupid = context.params.meetupId;\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    // perform actions on the collection object\n\n    const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupid)});\n //   const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n    client.close();\n\n    return {\n        props: {\n            meetUpData: {\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                id: selectedMeetup._id.toString(),\n                description: selectedMeetup.description\n            }\n        }\n    }\n}\n\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}