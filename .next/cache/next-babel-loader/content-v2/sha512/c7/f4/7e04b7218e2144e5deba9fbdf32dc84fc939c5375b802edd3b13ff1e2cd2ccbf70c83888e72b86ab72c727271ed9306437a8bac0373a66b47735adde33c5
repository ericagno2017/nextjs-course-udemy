{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nvar MeetUpDetails = function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React MeetUps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of higly active React Meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      address: props.meetUpData.address,\n      description: props.meetUpData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","Fragment","Head","MeetUpDetails","props","meetUpData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,aARJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAiBH,CAlBD;;KAAMN,a;;AAkEN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient, ObjectId} from \"mongodb\";\nimport {Fragment} from \"react\";\nimport Head from \"next/head\";\n\nconst MeetUpDetails = (props) => {\n    return (\n        <Fragment>\n            <Head>\n                <title>React MeetUps</title>\n                <meta\n                    name=\"description\"\n                    content=\"Browse a huge list of higly active React Meetups!\"\n                />\n            </Head>\n            <MeetupDetail\n                image={props.meetUpData.image}\n                title={props.meetUpData.title}\n                address={props.meetUpData.address}\n                description={props.meetUpData.description}\n            />\n        </Fragment>\n    );\n}\n\nexport async function getStaticPaths() {\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    // perform actions on the collection object\n    const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params:\n                {\n                    meetupId: meetup._id.toString()\n                }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    const meetupid = context.params.meetupId;\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    // perform actions on the collection object\n    const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupid)});\n\n    client.close();\n\n    return {\n        props: {\n            meetUpData: {\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                id: selectedMeetup._id.toString(),\n                description: selectedMeetup.description\n            }\n        }\n    }\n}\n\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}