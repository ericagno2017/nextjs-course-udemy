{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetUpData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetUpData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      address: props.meetUpData.address,\n      description: props.meetUpData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db(\"meetups\");\n  const meetupCollection = db.collection(\"meetups\"); // perform actions on the collection object\n\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupid = context.params.meetupId;\n  const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db(\"meetups\");\n  const meetupCollection = db.collection(\"meetups\"); // perform actions on the collection object\n\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupid)\n  });\n  client.close();\n  return {\n    props: {\n      meetUpData: {\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        id: selectedMeetup._id.toString(),\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["/media/enrique/Windows/desarrollo/react-course-Udemy/nextjs-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Fragment","Head","MeetUpDetails","props","meetUpData","title","description","image","address","getStaticPaths","uri","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupid","selectedMeetup","findOne","id"],"mappings":"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","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient, ObjectId} from \"mongodb\";\nimport {Fragment} from \"react\";\nimport Head from \"next/head\";\n\nconst MeetUpDetails = (props) => {\n    return (\n        <Fragment>\n            <Head>\n                <title>{props.meetUpData.title}</title>\n                <meta\n                    name=\"description\"\n                    content={props.meetUpData.description}\n                />\n            </Head>\n            <MeetupDetail\n                image={props.meetUpData.image}\n                title={props.meetUpData.title}\n                address={props.meetUpData.address}\n                description={props.meetUpData.description}\n            />\n        </Fragment>\n    );\n}\n\nexport async function getStaticPaths() {\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    // perform actions on the collection object\n    const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params:\n                {\n                    meetupId: meetup._id.toString()\n                }\n        }))\n    }\n}\n\nexport async function getStaticProps(context) {\n    const meetupid = context.params.meetupId;\n\n    const uri = \"mongodb+srv://testuser:mipassword@cluster0.7hbkps9.mongodb.net/?retryWrites=true&w=majority\";\n    const client = await MongoClient.connect(uri);\n    const db = client.db(\"meetups\");\n    const meetupCollection = db.collection(\"meetups\");\n    // perform actions on the collection object\n    const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupid)});\n\n    client.close();\n\n    return {\n        props: {\n            meetUpData: {\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                id: selectedMeetup._id.toString(),\n                description: selectedMeetup.description\n            }\n        }\n    }\n}\n\nexport default MeetUpDetails;"]},"metadata":{},"sourceType":"module"}